local lush = require('lush')
local base = require('ayugloom.base')

return lush(function(injected_functions)
  local sym = injected_functions.sym
  return {
    DapUIBreakpointsCurrentLine { base.Normal },
    DapUIBreakpointsDisabledLine { base.Comment },
    DapUIBreakpointsInfo { base.String },
    DapUIBreakpointsLine { base.LineNr },
    DapUIBreakpointsPath { base.Normal },
    DapUICurrentFrameName { DapUIBreakpointsCurrentLine },
    DapUIDecoration { base.Comment },
    DapUIEndofBuffer { base.Normal },
    DapUIFloatBorder { base.FloatBorder },
    DapUIFloatNormal { base.Normal },
    DapUIFrameName { base.Normal },
    DapUILineNumber { base.LineNr },
    DapUIModifiedValue { base.Identifier },
    DapUINormal { base.Normal },
    DapUINormalNC { DapUINormal },
    DapUIPlayPause { base.String },
    DapUIPlayPauseNC { DapUIPlayPause },
    DapUIRestart { base.String },
    DapUIRestartNC { DapUIRestart },
    DapUIScope { base.Identifier },
    DapUISource { fg = sym "@lsp.type.parameter".fg },
    DapUIStepBack { base.Identifier },
    DapUIStepBackNC { DapUIStepBack },
    DapUIStepInto { base.Identifier },
    DapUIStepIntoNC { DapUIStepInto },
    DapUIStepOut { base.Identifier },
    DapUIStepOutNC { DapUIStepOut },
    DapUIStepOver { base.Identifier },
    DapUIStepOverNC { DapUIStepOver },
    DapUIStop { base.Error },
    DapUIStopNC { DapUIStop },
    DapUIStoppedThread { base.Identifier },
    DapUIThread { base.String },
    DapUIType { fg = sym "@lsp.type.parameter".fg },
    DapUIUnavailable { base.Comment },
    DapUIUnavailableNC { DapUIUnavailable },
    DapUIValue { base.Normal },
    DapUIVariable { base.Normal },
    DapUIWatchesEmpty { base.Error },
    DapUIWatchesError { base.Error },
    DapUIWatchesValue { base.String },
    DapUIWinSelect { base.Identifier },
  }
end)
